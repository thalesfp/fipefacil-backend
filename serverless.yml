service: fipefacil

custom:
  accountId: 678634121400
  functions:
    reservedConcurrency: 2
    batchSize: 1
    timeout: 15
  enterprise:
    collectLambdaLogs: false
  tables:
    prices:
      dev: prices-dev
      production: prices
  queues:
    references:
      dev: references-dev
      production: references
    brands:
      dev: brands-dev
      production: brands
    models:
      dev: models-dev
      production: models
    yearModels:
      dev: yearmodels-dev
      production: yearmodels
  buckets:
    updateFiles:
      dev: update-files-bucket-dev
      production: update-files-bucket
  domain:
    dev: ${self:service}-dev.thales.work
    production: ${self:service}.thales.work
  customDomain:
    domainName: ${self:custom.domain.${self:provider.stage}}
    certificateName: "*.thales.work"
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, "dev"}
  region: us-east-1
  memorySize: 256
  environment:
    PRICES_TABLE: ${self:custom.tables.prices.${self:provider.stage}}
    REFERENCES_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:custom.accountId}/${self:custom.queues.references.${self:provider.stage}}
    BRANDS_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:custom.accountId}/${self:custom.queues.brands.${self:provider.stage}}
    MODELS_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:custom.accountId}/${self:custom.queues.models.${self:provider.stage}}
    YEAR_MODELS_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:custom.accountId}/${self:custom.queues.yearModels.${self:provider.stage}}
    UPDATE_FILES_BUCKET_NAME: ${self:custom.buckets.updateFiles.${self:provider.stage}}
    UPDATE_FILES_BUCKET_REGION: ${self:provider.region}
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - Fn::GetAtt: [PricesTable, Arn]
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
          Resource:
            - Fn::GetAtt: [ReferencesQueue, Arn]
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
          Resource:
            - Fn::GetAtt: [BrandsQueue, Arn]
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
          Resource:
            - Fn::GetAtt: [ModelsQueue, Arn]
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
          Resource:
            - Fn::GetAtt: [YearModelsQueue, Arn]
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource:
            - Fn::GetAtt: [UpdateFilesBucket, Arn]
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource:
            - Fn::Join: ["", [Fn::GetAtt: [UpdateFilesBucket, Arn], "/*"]]

functions:
  - ${file(serverless/functions-admin.yml)}
  - ${file(serverless/functions-update.yml)}
  - ${file(serverless/functions-query.yml)}

resources:
  - ${file(serverless/resources-dynamodb.yml)}
  - ${file(serverless/resources-sqs.yml)}
  - ${file(serverless/resources-s3.yml)}
  - ${file(serverless/resources-cognito.yml)}

package:
  individually: true

plugins:
  - serverless-domain-manager
  - serverless-webpack
  - serverless-offline
