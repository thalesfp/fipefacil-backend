service: fipefacil

custom:
  functions:
    reservedConcurrency: 2
    batchSize: 1
    timeout: 15
  enterprise:
    collectLambdaLogs: false
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, "dev"}
  region: us-east-1
  accountId: 678634121400
  memorySize: 256
  environment:
    PRICES_TABLE: prices
    REFERENCES_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:provider.accountId}/references
    BRANDS_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:provider.accountId}/brands
    MODELS_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:provider.accountId}/models
    YEAR_MODELS_QUEUE: https://sqs.${self:provider.region}.amazonaws.com/${self:provider.accountId}/yearmodels
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:${self:provider.accountId}:table/prices
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
      Resource:
        - arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:references
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
      Resource:
        - arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:brands
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
      Resource:
        - arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:models
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
      Resource:
        - arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:yearmodels

functions:
  checkForUpdate:
    handler: src/lambda/handler.checkForUpdateHandler
    events:
      - http:
          path: /checkForUpdate
          method: get
  startUpdateReference:
    handler: src/lambda/handler.startUpdateReferenceHandler
    events:
      - sqs:
          arn: arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:references
          batchSize: ${self:custom.functions.batchSize}
      - http:
          path: /startUpdateReference
          method: get
  startUpdateBrand:
    handler: src/lambda/handler.startUpdateBrandHandler
    reservedConcurrency: ${self:custom.functions.reservedConcurrency}
    timeout: ${self:custom.functions.timeout}
    events:
      - sqs:
          arn: arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:brands
          batchSize: ${self:custom.functions.batchSize}
      - http:
          path: /startUpdateBrand
          method: get
  startUpdateModel:
    handler: src/lambda/handler.startUpdateModelHandler
    reservedConcurrency: ${self:custom.functions.reservedConcurrency}
    events:
      - sqs:
          arn: arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:models
          batchSize: ${self:custom.functions.batchSize}
      - http:
          path: /startUpdateModel
          method: get
  startUpdateYearModel:
    handler: src/lambda/handler.startUpdateYearModelHandler
    reservedConcurrency: ${self:custom.functions.reservedConcurrency}
    events:
      - sqs:
          arn: arn:aws:sqs:${self:provider.region}:${self:provider.accountId}:yearmodels
          batchSize: ${self:custom.functions.batchSize}
      - http:
          path: /startUpdateYearModel
          method: get

resources:
  Resources:
    PricesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: prices
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 25
          WriteCapacityUnits: 25
    ReferencesQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "references"
    BrandsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "brands"
    ModelsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "models"
    YearModelsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "yearmodels"

package:
  individually: true
  exclude:
    - node_modules/aws-sdk/**

plugins:
  - serverless-plugin-typescript
